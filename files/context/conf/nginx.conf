user root;
worker_processes 4;
pid /var/run/nginx.pid;
daemon off;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# nginx-naxsi config
	##
	# Uncomment it if you installed nginx-naxsi
	##

	#include /etc/nginx/naxsi_core.rules;

	##
	# nginx-passenger config
	##
	# Uncomment it if you installed nginx-passenger
	##
	
	#passenger_root /usr;
	#passenger_ruby /usr/bin/ruby;

	##
	# Virtual Host Configs
	##
	upstream app {
			server unix:/app/tmp/sockets/unicorn.sock;
	}

	# the server directive is nginx's virtual host directive.
	server {
		# port to listen on. Can also be set to an IP:PORT
		listen 8080;
		
		# Set the max size for file uploads to 50Mb
		client_max_body_size 50M;

		# sets the domain[s] that this vhost server requests for
		#server_name *;

		# doc root
		root /app/public;

		# vhost specific access log
		access_log	/var/log/nginx.app.access.log;

		# this rewrites all the requests to the maintenance.html
		# page if it exists in the doc root. This is for capistrano's
		# disable web task
		if (-f $document_root/system/maintenance.html) {
			rewrite  ^(.*)$  /system/maintenance.html last;
			break;
		}

		location / {
			# needed to forward user's IP address to rails
			proxy_set_header	X-Real-IP  $remote_addr;

			# needed for HTTPS
			proxy_set_header	X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_redirect off;
			proxy_max_temp_file_size 0;
			
			# If the file exists as a static file serve it directly without
			# running all the other rewite tests on it
			if (-f $request_filename) { 
				break; 
			}

			# check for index.html for directory index
			# if its there on the filesystem then rewite 
			# the url to add /index.html to the end of it
			# and then break to send it to the next config rules.
			if (-f $request_filename/index.html) {
				rewrite (.*) $1/index.html break;
			}

			# this is the meat of the rails page caching config
			# it adds .html to the end of the url and then checks
			# the filesystem for that file. If it exists, then we
			# rewite the url to have explicit .html on the end 
			# and then send it on its way to the next config rule.
			# if there is no file on the fs then it sets all the 
			# necessary headers and proxies to our upstream mongrels
			if (-f $request_filename.html) {
				rewrite (.*) $1.html break;
			}

			if (!-f $request_filename) {
				proxy_pass http://app;
				break;
			}
		}

		error_page	 500 502 503 504	/500.html;
		location = /500.html {
			root	 /app/public;
		}
	}

}
